<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.handong.cms.mapper.CustomQueryMapper">

    <select id="findCourseIdBySlug" resultType="string">
        SELECT id 
        FROM tb_course 
        WHERE slug = #{slug} AND deleted = 'N'
    </select>

    <select id="findCourseIdByName" resultType="string">
        SELECT id 
        FROM tb_course 
        WHERE name = #{name} AND deleted = 'N'
    </select>

    <select id="findUserIdByUsername" resultType="string">
        SELECT id 
        FROM tb_user 
        WHERE username = #{username} AND deleted = 'N'
    </select>

    <select id="findTargetIdsByCourseId" resultType="string">
        <!-- 
            주어진 courseId에 해당하는 모든 NodeGroup ID와 Node ID를 검색합니다.
            댓글의 targetId는 NodeGroup ID 또는 Node ID일 수 있습니다.
        -->
        SELECT ng.id AS target_id
        FROM tb_course c
        JOIN tb_section s ON c.id = s.course_id 
        JOIN tb_node_group ng ON s.id = ng.section_id
        WHERE c.id = #{courseId} AND c.deleted = 'N'
        AND s.deleted = 'N' 
        AND ng.deleted = 'N'

        UNION

        SELECT n.id AS target_id
        FROM tb_course c
        JOIN tb_section s ON c.id = s.course_id
        JOIN tb_node_group ng ON s.id = ng.section_id
        JOIN tb_node n ON ng.id = n.node_group_id
        WHERE c.id = #{courseId} AND c.deleted = 'N'
        AND s.deleted = 'N' 
        AND ng.deleted = 'N'
        AND n.deleted = 'N'
    </select>
    
    <select id="findTargetIdsByNodeGroupId" resultType="string">
        <!-- 
            주어진 nodeGroupId에 해당하는 Node ID들과 nodeGroupId 자체를 검색합니다.
            댓글의 targetId는 NodeGroup ID 또는 Node ID일 수 있습니다.
        -->
        SELECT #{nodeGroupId} AS target_id
        
        UNION
        
        SELECT n.id AS target_id
        FROM tb_node n
        WHERE n.node_group_id = #{nodeGroupId} AND n.deleted = 'N'
    </select>

</mapper>
