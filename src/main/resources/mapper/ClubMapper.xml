<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="app.handong.cms.mapper.ClubMapper">

    <resultMap id="CourseInfoMap" type="app.handong.cms.dto.v1.ClubDto$ClubCourseInfoResDto">
        <result column="course_title" property="courseTitle"/>
        <result column="program_creator" property="programCreator"/>
        <result column="course_description" property="courseDescription"/>
        <result column="course_picture_url" property="coursePictureUrl"/>

        <collection property="categoryList" ofType="app.handong.cms.dto.v1.CategoryOfCommentDto$CategoryOfCommentBaseDto">
            <result column="category_slug" property="slug"/>
            <result column="category_label" property="label"/>
            <result column="category_emoji" property="emoji"/>
        </collection>

        <collection property="sectionList" ofType="app.handong.cms.dto.v1.SectionDto$SectionBaseDto">
            <result column="section_title" property="title"/>
            <result column="section_order" property="order"/>
        </collection>

        <collection property="nodeGroupList" ofType="app.handong.cms.dto.v1.NodeGroupDto$NodeGroupBaseDto">
            <result column="node_group_title" property="title"/>
            <result column="node_group_order" property="order"/>
        </collection>

        <collection property="nodeList" ofType="app.handong.cms.dto.v1.NodeDto$NodeBaseDto">
            <result column="node_type" property="type"/>
            <result column="node_order" property="order"/>
        </collection>
    </resultMap>

    <select id="getCourseInfo" resultMap="CourseInfoMap">
        SELECT
            c.title AS course_title,
            u.name AS program_creator,
            c.description AS course_description,
            c.picture_url AS course_picture_url,

            cc.slug AS category_slug,
            cc.label AS category_label,
            cc.emoji AS category_emoji,

            s.title AS section_title,
            s.`order` AS section_order,

            ng.title AS node_group_title,
            ng.`order` AS node_group_order,

            n.`type` AS node_type,
            n.`order` AS node_order

        FROM tb_course c
                 JOIN tb_club club ON c.club_id = club.id
                 JOIN tb_user u ON c.user_id = u.id
                 JOIN tb_comment_of_category cc ON cc.course_id = c.id
                 JOIN tb_section s ON s.course_id = c.id
                 JOIN tb_node_group ng ON ng.section_id = s.id
                 JOIN tb_node n ON n.node_group_id = ng.id

        WHERE club.name = #{clubName}
          AND c.slug = #{courseName}

        ORDER BY s.`order`, ng.`order`, n.`order`
    </select>
    <select id="getCoursesByClubSlugAsJson" resultType="string">
        SELECT 
            COALESCE( -- 가장 바깥쪽 JSON_ARRAYAGG 결과가 NULL이면 빈 배열 '[]'을 반환
                JSON_ARRAYAGG(
                    JSON_OBJECT(
                        'id',   c.id,
                        'title',c.title,
                        'slug', c.slug,
                        'description', c.description,
                        'pictureUrl', c.picture_url,
                        'isVisible', c.is_visible,
                        'creatorUserId', c.user_id,
                        'sections', (
                            SELECT JSON_ARRAYAGG(
                                JSON_OBJECT(
                                    'id',s.id,
                                    'title',s.title,
                                    'description', s.description,
                                    'order', s.order,
                                    'nodeGroups',(
                                        SELECT JSON_ARRAYAGG(
                                            JSON_OBJECT(
                                                'id',g.id,
                                                'title',g.title,
                                                'order', g.order,
                                                'nodes',(
                                                    SELECT JSON_ARRAYAGG(
                                                        JSON_OBJECT(
                                                            'id',n.id,
                                                            'type',n.type,
                                                            'data',n.data,
                                                            'order', n.order,
                                                            'isCommentPermitted', n.is_comment_permitted = b'1'
                                                        )
                                                    ) FROM tb_node n
                                                    WHERE n.node_group_id = g.id AND n.deleted = 'N'
                                                    ORDER BY n.order ASC
                                                )
                                            )
                                        ) FROM tb_node_group g
                                        WHERE g.section_id = s.id AND g.deleted = 'N'
                                        ORDER BY g.order ASC
                                    )
                                )
                            ) FROM tb_section s
                            WHERE s.course_id = c.id AND s.deleted = 'N'
                            ORDER BY s.order ASC
                        )
                    )
                ),
                JSON_ARRAY() -- tb_course가 없을 경우 빈 배열
            )
        FROM tb_course c
        JOIN tb_club club ON c.club_id = club.id
        WHERE club.slug = #{clubSlug} AND c.deleted = 'N' AND club.deleted = 'N'
        ORDER BY c.created_at DESC;
    </select>
</mapper>
